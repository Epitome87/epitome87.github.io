/**************** Colors ******************/
$color-primary-dark: hsla(240, 9%, 13%);

$color-primary: hsl(213, 94%, 68%);
// $color-primary: hsl(346, 100%, 63%);
// This color also isn't bad as my primary #60a5fa  #1d4ed8
$color-selection: hsl(340, 100%, 50%);
$color-selection: $color-primary;
$color-white: hsl(0, 0%, 100%);
$color-gradient-hero: linear-gradient(
  to right,
  hsl(194, 100%, 81%) 30%,
  hsl(268, 74%, 65%) 50%,
  hsl(341, 76%, 76%) 70%,
  hsl(40, 74%, 73%) 94%
);
// $color-gradient-hero: linear-gradient(271deg, $color-primary 30%, hsl(194, 100%, 63%));
// $color-gradient-hero: linear-gradient(to left, hsl(194, 100%, 63%) 30%, hsl(268, 100%, 63%) 50%, hsl(346, 100%, 63%) 70%, hsl(40, 100%, 63%) 94%);
// $color-gradient-hero: linear-gradient(to left, $color-primary);
/**************** Fonts *******************/
$font-color-primary: hsl(256, 20%, 89%);
$font-size-heading: 3rem;
$font-size-subheading: 1.5rem;
$font-size-body: 1.1rem;
$font-weight-body: 300;
$font-weight-heading: 700;
$font-family-body: 'Poppins';
$font-family-heading: 'Merriweather';

/*************** Spacing ******************/
// Margin in "Container"
$margin-mobile: 1rem;
$margin-desktop: 2rem;

// Border Radii
$subtle: 5px;
$rounded: 15px;
$circle: 50%;

// Breakpoints
$max-width: 1400px; //1200px;

$breakpoints: (
  sm: 499px,
  md: 899px,
  lg: 999px,
  xl: 1399px,
);

// Mixin for media queries -- mobile-first
@mixin breakpoint($size) {
  $breakpoint-value: map-get($breakpoints, $size);

  @media screen and (min-width: $breakpoint-value) {
    @content;
  }
}

$colorsDark: (
  clr-text: $color-white,
  clr-background: $color-primary-dark,
);

$colorsLight: (
  clr-text: $color-primary-dark,
  clr-background: $color-white,
);

// Dark is default
@media (prefers-color-scheme: dark) {
  :root {
    @each $name, $color in $colorsDark {
      --#{$name}: #{$color};
    }
  }
}

[color-scheme='dark'] {
  @each $name, $color in $colorsDark {
    --#{$name}: #{$color};
  }
}

// TODO: Light Mode is ugly at the moment -- let's not even make it an option
@media (prefers-color-scheme: light) {
  :root {
    @each $name, $color in $colorsLight {
      --#{$name}: #{$color};
    }
  }
}

[color-scheme='light'] {
  @each $name, $color in $colorsLight {
    --#{$name}: #{$color};
  }
}
