@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;500;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Merriweather:wght@400;700&display=swap');

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  scroll-behavior: smooth;
}

*::selection {
  background-color: $color-selection;
  color: white;
  text-decoration: underline;
  text-shadow: 0 5px 5px rgba(0, 0, 0, 0.8);
  stroke-width: 5px;
}

html {
  overflow-y: scroll;

  // If responsively designed, overflow in the x will only happen when I transform an object horizontally for an animation
  overflow-x: hidden;
  height: 100vh;
}

body {
  font-family: 'Poppins', sans-serif;

  font-size: $font-size-body;
  font-weight: $font-weight-body;
  line-height: 1.6;
  background-color: $color-primary-dark;
  color: $font-color-primary;
  // TODO: If I incorporate light / dark theme, we'll want to use these CSS variables instead
  background-color: var(--clr-background);
  color: var(--clr-text);
}

/* Custom Scrollbar */
body::-webkit-scrollbar {
  width: inherit;
}

body::-webkit-scrollbar-track {
  background-color: $color-primary-dark;
}

body::-webkit-scrollbar-thumb {
  background-color: $color-primary;
  border-radius: 20px;
}

img {
  width: 100%;
}

a:link,
a:visited {
  text-decoration: none;
  color: var(--clr-text); //$color-white;
}

.container {
  padding: 2rem $margin-mobile;
  margin: 0 auto;
  max-width: $max-width;

  @include breakpoint(md) {
    padding: 4rem $margin-desktop;
  }
}

.hidden {
  display: none;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  // font-family: 'Merriweather', serif;
  font-size: $font-size-heading * 0.6;
  text-align: center;

  // Headings have way too much spacing if they take multiple lines!
  // line-height: 1;

  /* Headers need more white-space! */
  // padding-top: 4rem;
  // padding-bottom: 2rem;

  font-family: 'Merriweather', serif;

  @include breakpoint(md) {
    font-size: $font-size-heading;
  }
}

input,
select,
textarea,
button {
  font-family: inherit;
}

// Sections will typically share the same margins
section {
  padding: 2rem $margin-mobile;
  margin: 0 auto;
  max-width: $max-width;

  @include breakpoint(md) {
    padding: 4rem $margin-desktop;
  }
}

button {
  align-self: flex-start;
  font-family: inherit;
  font-size: $font-size-body;
  border-radius: $subtle;
  cursor: pointer;
  padding: 0.5rem 2rem;
  text-transform: uppercase;
  border: 3px solid $color-primary;
  color: var(--clr-text);
  background-color: transparent;
  box-shadow: 0px 0.5rem 0.5rem rgba(0, 0, 0, 0.3);
  transition: 0.15s ease-in-out;

  &:focus,
  &:hover {
    background-color: $color-primary;
  }

  &:active {
    transform: scale(0.975);
    box-shadow: 0px 0.4rem 0.4rem rgba(0, 0, 0, 0.1);
  }
}

.reveal {
  opacity: 0;

  &.active {
    opacity: 1;
  }
}

.highlight {
  color: $color-primary;
}

.active.fade-top {
  animation: fade-top 1s ease-in;
}

.active.fade-bottom {
  animation: fade-bottom 1s ease-in;
}

.active.fade-left {
  animation: fade-left 1s ease-in;
}

.active.fade-right {
  animation: fade-right 1s ease-in;
}

@keyframes fade-top {
  0% {
    transform: translateY(-100px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes fade-bottom {
  0% {
    transform: translateY(50px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}
@keyframes fade-left {
  0% {
    transform: translateX(-100px);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}
@keyframes fade-right {
  0% {
    transform: translateX(100px);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes bounce-in {
  0% {
    transform: scale(0);
  }

  80% {
    transform: scale(105%);
  }

  90% {
    transform: scale(95%);
  }

  100% {
    transform: scale(100%);
  }
}

.active.bounce-in {
  animation: bounce-6 1s ease;

  // &.first-name {
  //   animation-iteration-count: infinite;
  //   animation-delay: 0.5s;
  // }
}

@keyframes bounce-6 {
  0% {
    transform: scale(1, 1) translateY(0);
  }
  10% {
    transform: scale(1.1, 0.9) translateY(0);
  }
  30% {
    transform: scale(0.9, 1.1) translateY(-30px);
  }
  50% {
    transform: scale(1.05, 0.95) translateY(0);
  }
  57% {
    transform: scale(1, 1) translateY(-7px);
  }
  64% {
    transform: scale(1, 1) translateY(0);
  }
  100% {
    transform: scale(1, 1) translateY(0);
  }
}

.squeeze {
  animation: squeeze 0.3s forwards ease-in;
}

@keyframes squeeze {
  0% {
    transform: scale(1, 1);
  }
  50% {
    transform: scale(0.9, 1);
  }
  70% {
    transform: scale(0.9, 0.3);
  }
  100% {
    transform: scale(0.9, 0.8);
  }
}
