@use 'sass:color';

#particles-js {
  position: absolute;
  // position: fixed;
  z-index: -1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--clr-background); //$color-primary-dark;
  // background-color: $color-primary * 0.8;
  // clip-path: polygon(0% 0%, 100% 0%, 100% 90%, 50% 100%, 0 90%);

  // This will cover up the entire particle canvas so we can slowly blend it into the hero section
  //  -- the sharp division line wasn't too pretty!
  &::after {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to bottom,
      hsla(240, 9%, 13%, 0) 0%,
      hsla(240, 9%, 13%, 0.5) 70%,
      hsla(240, 9%, 13%, 1) 100%
    );
    background: linear-gradient(
      to bottom,
      rgba(var(--clr-background), 0) 0%,
      rgba(var(--clr-background), 0.7) 70%,
      rgba(var(--clr-background), 1) 100%
    );
  }
}

.hero {
  // Display flex for simpler horizontal & vertical centering
  display: flex;
  flex-direction: column;
  justify-content: center;
  min-height: 100vh;
  text-align: center;
  text-transform: uppercase;

  &__cta {
    margin-top: 10rem;
    align-self: center;
    font-family: inherit;
    font-size: $font-size-body;
    font-weight: $font-weight-heading;
    letter-spacing: 2px;
    border-radius: $subtle;
    cursor: pointer;
    padding: 0.5rem 2rem;
    text-transform: uppercase;
    border: 3px solid $color-primary;
    color: var(--clr-text); //$color-white;
    background-color: transparent;
    box-shadow: 0px 0.5rem 0.5rem rgba(0, 0, 0, 0.3);
    transition: 0.15s ease-in-out;

    &:focus,
    &:hover {
      background-color: $color-primary;
    }

    &:active {
      transform: scale(0.975);
      box-shadow: 0px 0.4rem 0.4rem rgba(0, 0, 0, 0.1);
    }
  }

  &__header {
    font-family: 'Poppins', sans-serif;

    @include breakpoint(md) {
      letter-spacing: 15px;
    }

    .first-name {
      font-size: 3.3rem;
      display: block;
      display: inline-block;
      padding: 0;
      margin: 0;
      line-height: 0.8;
      background: $color-gradient-hero;
      background-clip: text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;

      // TODO: Testing separating each letter into its own span
      // TODO: The issue with this not working is because spans need to be inline-block to animate!
      // TODO: But when we put each letter in its own span, we break the cool background text clipping effect :(

      span {
        display: inline-block;
        background-color: $color-primary !important;
        background-clip: text;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;

        animation: bounce-6 1s ease;

        &:first-child {
          background-color: hsl(194, 100%, 81%);
          animation-delay: 0;
        }

        &:nth-child(2) {
          background-color: hsl(194, 100%, 81%);
          animation-delay: 0.2s;
        }

        &:nth-child(3) {
          background-color: hsl(223, 84%, 79%);
          animation-delay: 0.4s;
        }

        &:nth-child(4) {
          background-color: hsl(268, 74%, 65%);
          animation-delay: 0.6s;
        }

        &:nth-child(5) {
          background-color: hsl(303, 44%, 65%);
          animation-delay: 0.8s;
        }

        &:nth-child(6) {
          background-color: hsl(354, 71%, 78%);
          animation-delay: 1s;
        }

        &:last-child {
          background-color: hsl(40, 74%, 73%);
          animation-delay: 1.2s;
        }
      }

      @include breakpoint(sm) {
        font-size: 5rem;
      }

      @include breakpoint(md) {
        font-size: 7.5rem;
      }
    }

    .last-name {
      font-size: 3rem;
      background: #a2d2ff;
      color: var(--clr-background); //$color-primary-dark;
      display: inline-block;
      padding: 0 1rem;
      border-radius: 5px;
      line-height: 1;
      background: $color-gradient-hero;
      // TODO: Do I prefer this?!
      background: $color-primary;

      @include breakpoint(sm) {
        font-size: 4.65rem;
      }

      @include breakpoint(md) {
        font-size: 7rem;
      }
    }
  }

  &__subheader {
    font-size: calc($font-size-subheading * 0.75);
    margin-block: $margin-mobile;

    // TODO: Trying animations
    transform: translateX(-110%);
    animation: slide-in 0.5s 0.6s forwards ease-in-out;

    @include breakpoint(md) {
      letter-spacing: 3px;
      font-size: $font-size-subheading;
    }
  }
}

@keyframes slide-in {
  from {
    transform: translateX(-110%);
  }

  to {
    transform: translateX(0);
  }
}
